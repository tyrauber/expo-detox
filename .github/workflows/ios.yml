name: E2E Test

on:
  push:
    branches: [main]
    paths:
      - .github/workflows/ios.yml
      - apps/app/**
      - packages/**
      - yarn.lock
  pull_request:
    paths:
      - .github/workflows/ios.yml
      - apps/app/**
      - packages/**
      - yarn.lock

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ios:
    runs-on: macos-latest
    steps:
      - name: üëÄ Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: üç∫ Install required tools
        run: |
          brew tap wix/brew
          brew install applesimutils
          brew install watchman
          echo "$(pwd)/bin" >> $GITHUB_PATH
      - name: üíé Setup Ruby and install gems
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: ‚ôªÔ∏è Restore workspace node modules
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: |
            # See "workspaces" ‚Üí "packages" in the root package.json for the source of truth of
            # which node_modules are affected by the root yarn.lock
            node_modules
            apps/*/node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: üß∂ Install node modules in root dir
        run: yarn install --frozen-lockfile
      - name: ‚ôªÔ∏è Restore apps/app/ios/Pods from cache
        uses: actions/cache@v2
        id: pods-cache
        with:
          path: "apps/app/ios/Pods"
          key: ${{ runner.os }}-app-pods-${{ hashFiles('apps/app/ios/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-app-pods-
      - run: yarn global add expo-cli
      - name: üî® Prebuild
        run: expo prebuild -p ios
        working-directory: apps/app
      - name: üïµÔ∏è Debug CocoaPods lockfiles
        run: git diff Podfile.lock Pods/Manifest.lock
        working-directory: apps/app/ios
        continue-on-error: true
      - name: ‚öõÔ∏è Display React Native config
        run: yarn react-native config
        working-directory: apps/app
      - name: üå≥ Display pod environment
        run: pod env
        working-directory: apps/app/ios
      - name: ü•• Install pods in apps/app/ios
        run: pod install
        if: steps.pods-cache.outputs.cache-hit != 'true' || hashFiles('apps/app/ios/Podfile.lock') != hashFiles('apps/app/ios/Pods/Manifest.lock')
        working-directory: apps/app/ios
      - name: Clean Detox
        run: yarn detox:clean
        working-directory: apps/app
      - name: Build iOS project for Detox
        run: yarn build:ios-release
        working-directory: apps/app
        timeout-minutes: 30
      - name: Run tests
        run: yarn test:ios-release
        working-directory: apps/app
      - name: Store images of build failures
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: app-artifacts
          path: apps/app/artifacts

  android:
    runs-on: macos-latest
    steps:
      - name: üëÄ Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: üç∫ Install required tools
        run: |
          brew install watchman
          echo "$(pwd)/bin" >> $GITHUB_PATH
      - name: ‚ôªÔ∏è Restore workspace node modules
        uses: actions/cache@v2
        id: node-modules-cache
        with:
          path: |
            # See "workspaces" ‚Üí "packages" in the root package.json for the source of truth of
            # which node_modules are affected by the root yarn.lock
            node_modules
            apps/*/node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('yarn.lock') }}
      - name: üß∂ Install node modules in root dir
        run: yarn install --frozen-lockfile
      - uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-v20210625-${{ hashFiles('android/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-v20210625
      - run: yarn global add expo-cli
      - name: üî® Prebuild
        run: expo prebuild -p android
        working-directory: apps/app
      - name: ‚öõÔ∏è Display React Native config
        run: yarn react-native config
        working-directory: apps/app
      - name: Clean Detox
        run: yarn detox:clean
        working-directory: apps/app
      - name: Build Android project for Detox
        run: yarn build:android-release
        working-directory: apps/app
        timeout-minutes: 35
        env:
          GRADLE_OPTS: "-Dorg.gradle.internal.http.connectionTimeout=180000 -Dorg.gradle.internal.http.socketTimeout=180000 -Dorg.gradle.internal.network.retry.max.attempts=18 -Dorg.gradle.internal.network.retry.initial.backOff=2000"
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          avd-name: app
          script: yarn test:android-release
          working-directory: ./apps/app
      - name: Store images of build failures
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: app-artifacts
          path: apps/app/artifacts